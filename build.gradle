
plugins {
    id 'java-library'
    id 'signing'
    id 'idea'
    id 'maven-publish'
    id 'io.freefair.lombok' version '6.4.3'
}


repositories {
    mavenCentral()
}


group 'org.chronos-eaas'
archivesBaseName = "chronos-agent"
version '2.3.5-SNAPSHOT'

description = "Chronos Agent"


java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}


dependencies {
    implementation group: 'com.konghq', name: 'unirest-java', version: '3.13.10'
    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'

    implementation group: 'commons-validator', name: 'commons-validator', version: '1.7'
    implementation group: 'commons-net', name: 'commons-net', version: '3.8.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

    implementation group: 'net.lingala.zip4j', name: 'zip4j', version: '2.10.0'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


jar {
    manifest {
        attributes 'Manifest-Version': '1.0'
        attributes 'Copyright': 'The Chronos Project'
        attributes 'Group': project.group
        attributes 'Name': project.name
        attributes 'Version': project.version
    }
}

/*shadowJar {
    archiveClassifier.set('shadow')
}*/


javadoc {
    failOnError = false
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'Chronos Agent'
                description = 'Reference implementation of a Chronos Agent.'
                url = 'https://chronos-eaas.org/'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                scm {
                    url = 'https://github.com/Chronos-EaaS/Chronos-Agent/'
                }
                developers {
                    developer {
                        id = 'chronos'
                        name = 'Chronos'
                        email = 'mail@chronos-eaas.org'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/chronos-eaas/chronos-agent"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
//task generatePom(group: 'publishing', dependsOn: "generatePomFileFor${project.name.capitalize()}Publication")


signing {
    required { gradle.taskGraph.hasTask("publish") }
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}


idea {
    module {
        downloadJavadoc = true
        downloadSources = true

        inheritOutputDirs = false
        outputDir = file("${project.buildDir}/classes/main")
        testOutputDir = file("${project.buildDir}/classes/test")
    }
}
