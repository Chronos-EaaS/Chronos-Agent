
buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        // Shadowing; used to make a fat jar
        classpath group: 'com.github.jengelman.gradle.plugins', name: 'shadow', version: '5.2.0'
        // Lombok (https://plugins.gradle.org/plugin/io.freefair.lombok)
        classpath group: 'io.freefair.gradle', name: 'lombok-plugin', version: '4.1.6'
        // SonarQube (https://plugins.gradle.org/plugin/org.sonarqube, GNU LGPL 3)
        classpath group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version: '2.8'
    }
}


repositories {
    mavenCentral()
    jcenter()
}


apply plugin: 'idea'
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'io.freefair.lombok'
apply plugin: 'org.sonarqube'


group 'ch.unibas.dmi.dbis.chronos'
// Semantic Versioning: http://semver.org/
version '2.3.1-SNAPSHOT'


description = "Chronos Agent"


java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}


dependencies {
    /* ChronosJob.ChronosJob(org.json.JSONObject) is exposed to overwriting classes */
    api group: 'org.json', name: 'json', version: '20160212' /* version '20160212' is used by com.mashape.unirest:unirest-java:1.4.9 */

    implementation group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
    implementation group: 'com.google.guava', name: 'guava', version: '28.2-jre'

    implementation group: 'commons-validator', name: 'commons-validator', version: '1.6'
    implementation group: 'commons-net', name: 'commons-net', version: '3.6'
    implementation group: 'commons-io', name: 'commons-io', version: '2.5'

    implementation group: 'net.lingala.zip4j', name: 'zip4j', version: '1.3.2'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


jar {
    manifest {
        attributes 'Manifest-Version': '1.0'
        attributes 'Copyright': 'Databases and Information Systems Group, Department Mathematics and Computer Science, University of Basel, Switzerland'
        attributes 'Group': project.group
        attributes 'Name': project.name
        attributes 'Version': project.version
    }
}


javadoc {
    failOnError = false
}


publishing {
    publications {
        "${project.name}"(MavenPublication) {
            from components.java
            artifact jar
            artifact source: sourcesJar, classifier: 'sources', extension: 'jar'
            artifact source: javadocJar, classifier: 'javadoc', extension: 'jar'
            pom {
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                scm {
                    url = 'https://github.com/Chronos-EaaS/Chronos-Agent/'
                }
            }
        }
    }
}
task generatePom(group: 'publishing', dependsOn: "generatePomFileFor${project.name.capitalize()}Publication")


idea {
    module {
        downloadJavadoc = true
        downloadSources = true

        inheritOutputDirs = false
        outputDir = file("${project.buildDir}/classes/main")
        testOutputDir = file("${project.buildDir}/classes/test")
    }
}
